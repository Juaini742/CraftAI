// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  ChatBox   ChatBox[]
  ChatPDF   ChatPDF[]
}

model ChatBox {
  id              String            @id @default(cuid())
  title           String
  userID          String
  createdAt       DateTime          @default(now())
  user            User              @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ChatBoxMessages ChatBoxMessages[]
}

model ChatBoxMessages {
  id        String   @id @default(cuid())
  chatBoxID String
  chatBox   ChatBox  @relation(fields: [chatBoxID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  role      String
  message   String
  createdAt DateTime @default(now())
}

model ChatPDF {
  id              String            @id @default(cuid())
  title           String
  userID          String
  user            User              @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt       DateTime          @default(now())
  ChatPDFMessages ChatPDFMessages[]
}

model ChatPDFMessages {
  id        String   @id @default(cuid())
  chatPDFID String
  chatPDF   ChatPDF  @relation(fields: [chatPDFID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  role      String
  message   String
  createdAt DateTime @default(now())
}
